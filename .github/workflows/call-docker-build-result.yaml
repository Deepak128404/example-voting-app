name: CI BUILD RESULTS

on:
  # we want pull requests so we can build(test) but not push to image registry
  push:
    branches:
      - 'main'
    # only build when important files change
    paths:
      - 'result/**'
      - '.github/workflows/call-docker-build-result.yaml'
  pull_request:
    branches:
      - 'main'
    # only build when important files change
    paths:
      - 'result/**'
      - '.github/workflows/call-docker-build-result.yaml'

jobs:
  Docker-Build-Scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: result
        push: false
        load: true
        tags: deepak25404/examplevotingapp_result:${{ github.run_id}}


    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        context: result
        image-ref: 'deepak25404/examplevotingapp_result:${{ github.run_id }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL'

  Docker-Image-Push:
    runs-on: ubuntu-latest
    needs: Docker-Build-Scan
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Login to DockerHub
      uses: docker/build-push-action@v4
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Push Docker image
      uses: docker/build-push-action@v4
      with:
        context: result
        push: true
        tags: deepak25404/examplevotingapp_result:${{ github.run_id }}

  Slack-Alert:
    needs: [Docker-Build-Scan, Docker-Image-Push]
    if: always()
    runs-on: ubuntu-latest
    steps:
    - uses: technote-space/workflow-conclusion-action@v3
    - uses: 8398a7/action-slack@v3
      with:
        status: ${{ env.WORKFLOW_CONCLUSION }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
